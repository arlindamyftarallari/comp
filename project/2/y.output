Terminals which are not used

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: VarDeclaration SEMICOLON Declarations
    3             | FuncDeclaration SEMICOLON Declarations
    4             | /* empty */

    5 Type: INT
    6     | FLOAT32
    7     | BOOL
    8     | STRING

    9 VarDeclaration: VAR VarSpec
   10               | VAR LPAR VarSpec SEMICOLON RPAR

   11 VarSpec: ID IdOpt Type

   12 IdOpt: COMMA ID IdOpt
   13      | /* empty */

   14 FuncDeclaration: FUNC ID LPAR ParametersOpt RPAR TypeOpt FuncBody

   15 ParametersOpt: Parameters
   16              | /* empty */

   17 TypeOpt: Type
   18        | /* empty */

   19 Parameters: ID Type OptParam

   20 OptParam: COMMA ID Type OptParam
   21         | /* empty */

   22 FuncBody: LBRACE VarsAndStatements RBRACE

   23 VarsAndStatements: VarsAndStatements varsAndStatementsOpt SEMICOLON
   24                  | /* empty */

   25 varsAndStatementsOpt: VarDeclaration
   26                     | Statement
   27                     | /* empty */

   28 Statement: ID ASSIGN Expr
   29          | LBRACE StatementOpt RBRACE
   30          | IF Expr LBRACE StatementOpt RBRACE ElseOpt
   31          | FOR ExprOpt LBRACE StatementOpt RBRACE
   32          | RETURN ExprOpt
   33          | FuncInvocation
   34          | ParseArgs
   35          | PRINT LPAR printArgs RPAR
   36          | error

   37 printArgs: STRLIT
   38          | Expr

   39 ExprOpt: Expr
   40        | /* empty */

   41 StatementOpt: Statement SEMICOLON StatementOpt
   42             | /* empty */

   43 ElseOpt: ELSE LBRACE StatementOpt RBRACE
   44        | /* empty */

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   46          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   47 FuncInvocation: ID LPAR CallParams RPAR
   48               | ID LPAR error RPAR

   49 CallParams: Expr OptCallParams
   50           | /* empty */

   51 OptCallParams: COMMA Expr OptCallParams
   52              | /* empty */

   53 Expr: LPAR Expr RPAR
   54     | LPAR error RPAR
   55     | NOT Expr
   56     | MINUS Expr
   57     | PLUS Expr
   58     | Expr PLUS Expr
   59     | Expr MINUS Expr
   60     | Expr STAR Expr
   61     | Expr DIV Expr
   62     | Expr MOD Expr
   63     | Expr OR Expr
   64     | Expr AND Expr
   65     | Expr LT Expr
   66     | Expr GT Expr
   67     | Expr EQ Expr
   68     | Expr NE Expr
   69     | Expr LE Expr
   70     | Expr GE Expr
   71     | INTLIT
   72     | REALLIT
   73     | ID
   74     | FuncInvocation


Terminals, with rules where they appear

$end (0) 0
error (256) 36 46 48 54
SEMICOLON (258) 1 2 3 10 23 41
BLANKID (259) 45 46
PACKAGE (260) 1
RETURN (261) 32
AND (262) 64
ASSIGN (263) 28 45 46
STAR (264) 60
COMMA (265) 12 20 45 46 51
DIV (266) 61
EQ (267) 67
GE (268) 70
GT (269) 66
LBRACE (270) 22 29 30 31 43
LE (271) 69
LPAR (272) 10 14 35 45 46 47 48 53 54
LSQ (273) 45
LT (274) 65
MINUS (275) 56 59
MOD (276) 62
NE (277) 68
NOT (278) 55
OR (279) 63
PLUS (280) 57 58
RBRACE (281) 22 29 30 31 43
RPAR (282) 10 14 35 45 46 47 48 53 54
RSQ (283) 45
ELSE (284) 43
FOR (285) 31
IF (286) 30
VAR (287) 9 10
INT (288) 5
FLOAT32 (289) 6
BOOL (290) 7
STRING (291) 8
PRINT (292) 35
PARSEINT (293) 45 46
FUNC (294) 14
CMDARGS (295) 45
RESERVED (296)
STRLIT (297) 37
INTLIT (298) 71
ID (299) 1 11 12 14 19 20 28 45 46 47 48 73
REALLIT (300) 72
UNARY (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Program (48)
    on left: 1, on right: 0
Declarations (49)
    on left: 2 3 4, on right: 1 2 3
Type (50)
    on left: 5 6 7 8, on right: 11 17 19 20
VarDeclaration (51)
    on left: 9 10, on right: 2 25
VarSpec (52)
    on left: 11, on right: 9 10
IdOpt (53)
    on left: 12 13, on right: 11 12
FuncDeclaration (54)
    on left: 14, on right: 3
ParametersOpt (55)
    on left: 15 16, on right: 14
TypeOpt (56)
    on left: 17 18, on right: 14
Parameters (57)
    on left: 19, on right: 15
OptParam (58)
    on left: 20 21, on right: 19 20
FuncBody (59)
    on left: 22, on right: 14
VarsAndStatements (60)
    on left: 23 24, on right: 22 23
varsAndStatementsOpt (61)
    on left: 25 26 27, on right: 23
Statement (62)
    on left: 28 29 30 31 32 33 34 35 36, on right: 26 41
printArgs (63)
    on left: 37 38, on right: 35
ExprOpt (64)
    on left: 39 40, on right: 31 32
StatementOpt (65)
    on left: 41 42, on right: 29 30 31 41 43
ElseOpt (66)
    on left: 43 44, on right: 30
ParseArgs (67)
    on left: 45 46, on right: 34
FuncInvocation (68)
    on left: 47 48, on right: 33 74
CallParams (69)
    on left: 49 50, on right: 47
OptCallParams (70)
    on left: 51 52, on right: 49 51
Expr (71)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74, on right: 28 30 38 39 45 49 51 53 55 56 57 58 59 60
    61 62 63 64 65 66 67 68 69 70


state 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


state 6

    9 VarDeclaration: VAR . VarSpec
   10               | VAR . LPAR VarSpec SEMICOLON RPAR

    LPAR  shift, and go to state 11
    ID    shift, and go to state 12

    VarSpec  go to state 13


state 7

   14 FuncDeclaration: FUNC . ID LPAR ParametersOpt RPAR TypeOpt FuncBody

    ID  shift, and go to state 14


state 8

    1 Program: PACKAGE ID SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


state 9

    2 Declarations: VarDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


state 10

    3 Declarations: FuncDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


state 11

   10 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 12

    VarSpec  go to state 17


state 12

   11 VarSpec: ID . IdOpt Type

    COMMA  shift, and go to state 18

    $default  reduce using rule 13 (IdOpt)

    IdOpt  go to state 19


state 13

    9 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 9 (VarDeclaration)


state 14

   14 FuncDeclaration: FUNC ID . LPAR ParametersOpt RPAR TypeOpt FuncBody

    LPAR  shift, and go to state 20


state 15

    2 Declarations: VarDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 21
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


state 16

    3 Declarations: FuncDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 22
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


state 17

   10 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 23


state 18

   12 IdOpt: COMMA . ID IdOpt

    ID  shift, and go to state 24


state 19

   11 VarSpec: ID IdOpt . Type

    INT      shift, and go to state 25
    FLOAT32  shift, and go to state 26
    BOOL     shift, and go to state 27
    STRING   shift, and go to state 28

    Type  go to state 29


state 20

   14 FuncDeclaration: FUNC ID LPAR . ParametersOpt RPAR TypeOpt FuncBody

    ID  shift, and go to state 30

    $default  reduce using rule 16 (ParametersOpt)

    ParametersOpt  go to state 31
    Parameters     go to state 32


state 21

    2 Declarations: VarDeclaration SEMICOLON Declarations .

    $default  reduce using rule 2 (Declarations)


state 22

    3 Declarations: FuncDeclaration SEMICOLON Declarations .

    $default  reduce using rule 3 (Declarations)


state 23

   10 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 33


state 24

   12 IdOpt: COMMA ID . IdOpt

    COMMA  shift, and go to state 18

    $default  reduce using rule 13 (IdOpt)

    IdOpt  go to state 34


state 25

    5 Type: INT .

    $default  reduce using rule 5 (Type)


state 26

    6 Type: FLOAT32 .

    $default  reduce using rule 6 (Type)


state 27

    7 Type: BOOL .

    $default  reduce using rule 7 (Type)


state 28

    8 Type: STRING .

    $default  reduce using rule 8 (Type)


state 29

   11 VarSpec: ID IdOpt Type .

    $default  reduce using rule 11 (VarSpec)


state 30

   19 Parameters: ID . Type OptParam

    INT      shift, and go to state 25
    FLOAT32  shift, and go to state 26
    BOOL     shift, and go to state 27
    STRING   shift, and go to state 28

    Type  go to state 35


state 31

   14 FuncDeclaration: FUNC ID LPAR ParametersOpt . RPAR TypeOpt FuncBody

    RPAR  shift, and go to state 36


state 32

   15 ParametersOpt: Parameters .

    $default  reduce using rule 15 (ParametersOpt)


state 33

   10 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 10 (VarDeclaration)


state 34

   12 IdOpt: COMMA ID IdOpt .

    $default  reduce using rule 12 (IdOpt)


state 35

   19 Parameters: ID Type . OptParam

    COMMA  shift, and go to state 37

    $default  reduce using rule 21 (OptParam)

    OptParam  go to state 38


state 36

   14 FuncDeclaration: FUNC ID LPAR ParametersOpt RPAR . TypeOpt FuncBody

    INT      shift, and go to state 25
    FLOAT32  shift, and go to state 26
    BOOL     shift, and go to state 27
    STRING   shift, and go to state 28

    $default  reduce using rule 18 (TypeOpt)

    Type     go to state 39
    TypeOpt  go to state 40


state 37

   20 OptParam: COMMA . ID Type OptParam

    ID  shift, and go to state 41


state 38

   19 Parameters: ID Type OptParam .

    $default  reduce using rule 19 (Parameters)


state 39

   17 TypeOpt: Type .

    $default  reduce using rule 17 (TypeOpt)


state 40

   14 FuncDeclaration: FUNC ID LPAR ParametersOpt RPAR TypeOpt . FuncBody

    LBRACE  shift, and go to state 42

    FuncBody  go to state 43


state 41

   20 OptParam: COMMA ID . Type OptParam

    INT      shift, and go to state 25
    FLOAT32  shift, and go to state 26
    BOOL     shift, and go to state 27
    STRING   shift, and go to state 28

    Type  go to state 44


state 42

   22 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 24 (VarsAndStatements)

    VarsAndStatements  go to state 45


state 43

   14 FuncDeclaration: FUNC ID LPAR ParametersOpt RPAR TypeOpt FuncBody .

    $default  reduce using rule 14 (FuncDeclaration)


state 44

   20 OptParam: COMMA ID Type . OptParam

    COMMA  shift, and go to state 37

    $default  reduce using rule 21 (OptParam)

    OptParam  go to state 46


state 45

   22 FuncBody: LBRACE VarsAndStatements . RBRACE
   23 VarsAndStatements: VarsAndStatements . varsAndStatementsOpt SEMICOLON

    error   shift, and go to state 47
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    RBRACE  shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    VAR     shift, and go to state 6
    PRINT   shift, and go to state 53
    ID      shift, and go to state 54

    SEMICOLON  reduce using rule 27 (varsAndStatementsOpt)

    VarDeclaration        go to state 55
    varsAndStatementsOpt  go to state 56
    Statement             go to state 57
    ParseArgs             go to state 58
    FuncInvocation        go to state 59


state 46

   20 OptParam: COMMA ID Type OptParam .

    $default  reduce using rule 20 (OptParam)


state 47

   36 Statement: error .

    $default  reduce using rule 36 (Statement)


state 48

   32 Statement: RETURN . ExprOpt

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    $default  reduce using rule 40 (ExprOpt)

    ExprOpt         go to state 67
    FuncInvocation  go to state 68
    Expr            go to state 69


state 49

   29 Statement: LBRACE . StatementOpt RBRACE

    error   shift, and go to state 47
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    PRINT   shift, and go to state 53
    ID      shift, and go to state 54

    RBRACE  reduce using rule 42 (StatementOpt)

    Statement       go to state 70
    StatementOpt    go to state 71
    ParseArgs       go to state 58
    FuncInvocation  go to state 59


state 50

   22 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 22 (FuncBody)


state 51

   31 Statement: FOR . ExprOpt LBRACE StatementOpt RBRACE

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    $default  reduce using rule 40 (ExprOpt)

    ExprOpt         go to state 72
    FuncInvocation  go to state 68
    Expr            go to state 69


state 52

   30 Statement: IF . Expr LBRACE StatementOpt RBRACE ElseOpt

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 73


state 53

   35 Statement: PRINT . LPAR printArgs RPAR

    LPAR  shift, and go to state 74


state 54

   28 Statement: ID . ASSIGN Expr
   45 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   46          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   47 FuncInvocation: ID . LPAR CallParams RPAR
   48               | ID . LPAR error RPAR

    ASSIGN  shift, and go to state 75
    COMMA   shift, and go to state 76
    LPAR    shift, and go to state 77


state 55

   25 varsAndStatementsOpt: VarDeclaration .

    $default  reduce using rule 25 (varsAndStatementsOpt)


state 56

   23 VarsAndStatements: VarsAndStatements varsAndStatementsOpt . SEMICOLON

    SEMICOLON  shift, and go to state 78


state 57

   26 varsAndStatementsOpt: Statement .

    $default  reduce using rule 26 (varsAndStatementsOpt)


state 58

   34 Statement: ParseArgs .

    $default  reduce using rule 34 (Statement)


state 59

   33 Statement: FuncInvocation .

    $default  reduce using rule 33 (Statement)


state 60

   53 Expr: LPAR . Expr RPAR
   54     | LPAR . error RPAR

    error    shift, and go to state 79
    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 80


state 61

   56 Expr: MINUS . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 81


state 62

   55 Expr: NOT . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 82


state 63

   57 Expr: PLUS . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 83


state 64

   71 Expr: INTLIT .

    $default  reduce using rule 71 (Expr)


state 65

   47 FuncInvocation: ID . LPAR CallParams RPAR
   48               | ID . LPAR error RPAR
   73 Expr: ID .

    LPAR  shift, and go to state 77

    $default  reduce using rule 73 (Expr)


state 66

   72 Expr: REALLIT .

    $default  reduce using rule 72 (Expr)


state 67

   32 Statement: RETURN ExprOpt .

    $default  reduce using rule 32 (Statement)


state 68

   74 Expr: FuncInvocation .

    $default  reduce using rule 74 (Expr)


state 69

   39 ExprOpt: Expr .
   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    PLUS   shift, and go to state 96

    $default  reduce using rule 39 (ExprOpt)


state 70

   41 StatementOpt: Statement . SEMICOLON StatementOpt

    SEMICOLON  shift, and go to state 97


state 71

   29 Statement: LBRACE StatementOpt . RBRACE

    RBRACE  shift, and go to state 98


state 72

   31 Statement: FOR ExprOpt . LBRACE StatementOpt RBRACE

    LBRACE  shift, and go to state 99


state 73

   30 Statement: IF Expr . LBRACE StatementOpt RBRACE ElseOpt
   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND     shift, and go to state 84
    STAR    shift, and go to state 85
    DIV     shift, and go to state 86
    EQ      shift, and go to state 87
    GE      shift, and go to state 88
    GT      shift, and go to state 89
    LBRACE  shift, and go to state 100
    LE      shift, and go to state 90
    LT      shift, and go to state 91
    MINUS   shift, and go to state 92
    MOD     shift, and go to state 93
    NE      shift, and go to state 94
    OR      shift, and go to state 95
    PLUS    shift, and go to state 96


state 74

   35 Statement: PRINT LPAR . printArgs RPAR

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    STRLIT   shift, and go to state 101
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    printArgs       go to state 102
    FuncInvocation  go to state 68
    Expr            go to state 103


state 75

   28 Statement: ID ASSIGN . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 104


state 76

   45 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   46          | ID COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 105


state 77

   47 FuncInvocation: ID LPAR . CallParams RPAR
   48               | ID LPAR . error RPAR

    error    shift, and go to state 106
    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    RPAR  reduce using rule 50 (CallParams)

    FuncInvocation  go to state 68
    CallParams      go to state 107
    Expr            go to state 108


state 78

   23 VarsAndStatements: VarsAndStatements varsAndStatementsOpt SEMICOLON .

    $default  reduce using rule 23 (VarsAndStatements)


state 79

   54 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 109


state 80

   53 Expr: LPAR Expr . RPAR
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    PLUS   shift, and go to state 96
    RPAR   shift, and go to state 110


state 81

   56 Expr: MINUS Expr .
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    $default  reduce using rule 56 (Expr)


state 82

   55 Expr: NOT Expr .
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    $default  reduce using rule 55 (Expr)


state 83

   57 Expr: PLUS Expr .
   58     | Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    $default  reduce using rule 57 (Expr)


state 84

   64 Expr: Expr AND . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 111


state 85

   60 Expr: Expr STAR . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 112


state 86

   61 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 113


state 87

   67 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 114


state 88

   70 Expr: Expr GE . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 115


state 89

   66 Expr: Expr GT . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 116


state 90

   69 Expr: Expr LE . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 117


state 91

   65 Expr: Expr LT . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 118


state 92

   59 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 119


state 93

   62 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 120


state 94

   68 Expr: Expr NE . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 121


state 95

   63 Expr: Expr OR . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 122


state 96

   58 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 123


state 97

   41 StatementOpt: Statement SEMICOLON . StatementOpt

    error   shift, and go to state 47
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    PRINT   shift, and go to state 53
    ID      shift, and go to state 54

    RBRACE  reduce using rule 42 (StatementOpt)

    Statement       go to state 70
    StatementOpt    go to state 124
    ParseArgs       go to state 58
    FuncInvocation  go to state 59


state 98

   29 Statement: LBRACE StatementOpt RBRACE .

    $default  reduce using rule 29 (Statement)


state 99

   31 Statement: FOR ExprOpt LBRACE . StatementOpt RBRACE

    error   shift, and go to state 47
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    PRINT   shift, and go to state 53
    ID      shift, and go to state 54

    RBRACE  reduce using rule 42 (StatementOpt)

    Statement       go to state 70
    StatementOpt    go to state 125
    ParseArgs       go to state 58
    FuncInvocation  go to state 59


state 100

   30 Statement: IF Expr LBRACE . StatementOpt RBRACE ElseOpt

    error   shift, and go to state 47
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    PRINT   shift, and go to state 53
    ID      shift, and go to state 54

    RBRACE  reduce using rule 42 (StatementOpt)

    Statement       go to state 70
    StatementOpt    go to state 126
    ParseArgs       go to state 58
    FuncInvocation  go to state 59


state 101

   37 printArgs: STRLIT .

    $default  reduce using rule 37 (printArgs)


state 102

   35 Statement: PRINT LPAR printArgs . RPAR

    RPAR  shift, and go to state 127


state 103

   38 printArgs: Expr .
   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    PLUS   shift, and go to state 96

    $default  reduce using rule 38 (printArgs)


state 104

   28 Statement: ID ASSIGN Expr .
   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    PLUS   shift, and go to state 96

    $default  reduce using rule 28 (Statement)


state 105

   45 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   46          | ID COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 128


state 106

   48 FuncInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 129


state 107

   47 FuncInvocation: ID LPAR CallParams . RPAR

    RPAR  shift, and go to state 130


state 108

   49 CallParams: Expr . OptCallParams
   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    COMMA  shift, and go to state 131
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    PLUS   shift, and go to state 96

    $default  reduce using rule 52 (OptCallParams)

    OptCallParams  go to state 132


state 109

   54 Expr: LPAR error RPAR .

    $default  reduce using rule 54 (Expr)


state 110

   53 Expr: LPAR Expr RPAR .

    $default  reduce using rule 53 (Expr)


state 111

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   64     | Expr AND Expr .
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    PLUS   shift, and go to state 96

    $default  reduce using rule 64 (Expr)


state 112

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   60     | Expr STAR Expr .
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    $default  reduce using rule 60 (Expr)


state 113

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   61     | Expr DIV Expr .
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    $default  reduce using rule 61 (Expr)


state 114

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   67     | Expr EQ Expr .
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    PLUS   shift, and go to state 96

    $default  reduce using rule 67 (Expr)


state 115

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr
   70     | Expr GE Expr .

    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    PLUS   shift, and go to state 96

    $default  reduce using rule 70 (Expr)


state 116

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   66     | Expr GT Expr .
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    PLUS   shift, and go to state 96

    $default  reduce using rule 66 (Expr)


state 117

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   69     | Expr LE Expr .
   70     | Expr . GE Expr

    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    PLUS   shift, and go to state 96

    $default  reduce using rule 69 (Expr)


state 118

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   65     | Expr LT Expr .
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    PLUS   shift, and go to state 96

    $default  reduce using rule 65 (Expr)


state 119

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   59     | Expr MINUS Expr .
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    STAR  shift, and go to state 85
    DIV   shift, and go to state 86
    MOD   shift, and go to state 93

    $default  reduce using rule 59 (Expr)


state 120

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   62     | Expr MOD Expr .
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    $default  reduce using rule 62 (Expr)


state 121

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   68     | Expr NE Expr .
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    PLUS   shift, and go to state 96

    $default  reduce using rule 68 (Expr)


state 122

   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   63     | Expr OR Expr .
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    PLUS   shift, and go to state 96

    $default  reduce using rule 63 (Expr)


state 123

   58 Expr: Expr . PLUS Expr
   58     | Expr PLUS Expr .
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    STAR  shift, and go to state 85
    DIV   shift, and go to state 86
    MOD   shift, and go to state 93

    $default  reduce using rule 58 (Expr)


state 124

   41 StatementOpt: Statement SEMICOLON StatementOpt .

    $default  reduce using rule 41 (StatementOpt)


state 125

   31 Statement: FOR ExprOpt LBRACE StatementOpt . RBRACE

    RBRACE  shift, and go to state 133


state 126

   30 Statement: IF Expr LBRACE StatementOpt . RBRACE ElseOpt

    RBRACE  shift, and go to state 134


state 127

   35 Statement: PRINT LPAR printArgs RPAR .

    $default  reduce using rule 35 (Statement)


state 128

   45 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   46          | ID COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 135


state 129

   48 FuncInvocation: ID LPAR error RPAR .

    $default  reduce using rule 48 (FuncInvocation)


state 130

   47 FuncInvocation: ID LPAR CallParams RPAR .

    $default  reduce using rule 47 (FuncInvocation)


state 131

   51 OptCallParams: COMMA . Expr OptCallParams

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 136


state 132

   49 CallParams: Expr OptCallParams .

    $default  reduce using rule 49 (CallParams)


state 133

   31 Statement: FOR ExprOpt LBRACE StatementOpt RBRACE .

    $default  reduce using rule 31 (Statement)


state 134

   30 Statement: IF Expr LBRACE StatementOpt RBRACE . ElseOpt

    ELSE  shift, and go to state 137

    $default  reduce using rule 44 (ElseOpt)

    ElseOpt  go to state 138


state 135

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   46          | ID COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 139


state 136

   51 OptCallParams: COMMA Expr . OptCallParams
   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    COMMA  shift, and go to state 131
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    PLUS   shift, and go to state 96

    $default  reduce using rule 52 (OptCallParams)

    OptCallParams  go to state 140


state 137

   43 ElseOpt: ELSE . LBRACE StatementOpt RBRACE

    LBRACE  shift, and go to state 141


state 138

   30 Statement: IF Expr LBRACE StatementOpt RBRACE ElseOpt .

    $default  reduce using rule 30 (Statement)


state 139

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   46          | ID COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 142
    CMDARGS  shift, and go to state 143


state 140

   51 OptCallParams: COMMA Expr OptCallParams .

    $default  reduce using rule 51 (OptCallParams)


state 141

   43 ElseOpt: ELSE LBRACE . StatementOpt RBRACE

    error   shift, and go to state 47
    RETURN  shift, and go to state 48
    LBRACE  shift, and go to state 49
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    PRINT   shift, and go to state 53
    ID      shift, and go to state 54

    RBRACE  reduce using rule 42 (StatementOpt)

    Statement       go to state 70
    StatementOpt    go to state 144
    ParseArgs       go to state 58
    FuncInvocation  go to state 59


state 142

   46 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 145


state 143

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 146


state 144

   43 ElseOpt: ELSE LBRACE StatementOpt . RBRACE

    RBRACE  shift, and go to state 147


state 145

   46 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 46 (ParseArgs)


state 146

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    LPAR     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    PLUS     shift, and go to state 63
    INTLIT   shift, and go to state 64
    ID       shift, and go to state 65
    REALLIT  shift, and go to state 66

    FuncInvocation  go to state 68
    Expr            go to state 148


state 147

   43 ElseOpt: ELSE LBRACE StatementOpt RBRACE .

    $default  reduce using rule 43 (ElseOpt)


state 148

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   58 Expr: Expr . PLUS Expr
   59     | Expr . MINUS Expr
   60     | Expr . STAR Expr
   61     | Expr . DIV Expr
   62     | Expr . MOD Expr
   63     | Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . EQ Expr
   68     | Expr . NE Expr
   69     | Expr . LE Expr
   70     | Expr . GE Expr

    AND    shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    EQ     shift, and go to state 87
    GE     shift, and go to state 88
    GT     shift, and go to state 89
    LE     shift, and go to state 90
    LT     shift, and go to state 91
    MINUS  shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    OR     shift, and go to state 95
    PLUS   shift, and go to state 96
    RSQ    shift, and go to state 149


state 149

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 150


state 150

   45 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 45 (ParseArgs)
